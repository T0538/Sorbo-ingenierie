// Script de d√©ploiement rapide pour corriger les CORS sur Railway
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ === CORRECTION CORS ET D√âPLOIEMENT RAILWAY ===\n');

// V√©rifier que nous sommes dans le bon r√©pertoire
if (!fs.existsSync('backend/server.js')) {
    console.log('‚ùå Erreur: fichier backend/server.js non trouv√©');
    console.log('   Assurez-vous d\'√™tre dans le r√©pertoire racine du projet');
    process.exit(1);
}

console.log('‚úÖ Structure du projet v√©rifi√©e');

// V√©rifier si Git est configur√©
try {
    execSync('git --version', { stdio: 'pipe' });
    console.log('‚úÖ Git disponible');
} catch (error) {
    console.log('‚ùå Git non disponible');
    process.exit(1);
}

// V√©rifier le statut Git
console.log('\nüìã Statut Git:');
try {
    const status = execSync('git status --porcelain', { encoding: 'utf8' });
    if (status.trim()) {
        console.log('üìù Fichiers modifi√©s d√©tect√©s:');
        console.log(status);
    } else {
        console.log('‚úÖ Aucune modification en attente');
    }
} catch (error) {
    console.log('‚ö†Ô∏è Impossible de v√©rifier le statut Git');
}

// Ajouter les modifications
console.log('\nüì¶ Ajout des modifications...');
try {
    execSync('git add .', { stdio: 'inherit' });
    console.log('‚úÖ Modifications ajout√©es');
} catch (error) {
    console.log('‚ùå Erreur lors de l\'ajout des modifications');
    process.exit(1);
}

// Cr√©er un commit
const commitMessage = `üîß Correction CORS pour domaines .ci

- Ajout des domaines sorbo-ingenierie.ci et www.sorbo-ingenierie.ci
- Configuration compl√®te des headers CORS
- Ajout du logging pour debug
- Support HTTP et HTTPS pour tous les domaines

Timestamp: ${new Date().toISOString()}`;

console.log('\nüíæ Cr√©ation du commit...');
try {
    execSync(`git commit -m "${commitMessage}"`, { stdio: 'inherit' });
    console.log('‚úÖ Commit cr√©√©');
} catch (error) {
    console.log('‚ö†Ô∏è Pas de nouvelles modifications √† commiter (normal si d√©j√† fait)');
}

// Pousser vers Railway (si configur√©)
console.log('\nüöÄ Tentative de d√©ploiement vers Railway...');
try {
    // Essayer de pousser vers Railway
    execSync('git push railway main', { stdio: 'inherit' });
    console.log('‚úÖ D√©ploiement Railway r√©ussi');
} catch (error) {
    console.log('‚ö†Ô∏è D√©ploiement Railway direct √©chou√©, essai avec origin...');
    
    try {
        execSync('git push origin main', { stdio: 'inherit' });
        console.log('‚úÖ Push vers origin r√©ussi');
        console.log('‚ÑπÔ∏è Railway devrait d√©ployer automatiquement depuis GitHub');
    } catch (error2) {
        console.log('‚ùå Push √©chou√©');
        console.log('üîß Solutions possibles:');
        console.log('   1. V√©rifiez la configuration Git remote');
        console.log('   2. D√©ployez manuellement depuis le dashboard Railway');
        console.log('   3. Utilisez Railway CLI: railway deploy');
    }
}

// Instructions de v√©rification
console.log('\n‚úÖ === CORRECTION CORS TERMIN√âE ===');
console.log('\nüîç V√©rifications √† effectuer:');
console.log('1. ‚úÖ Domaines .ci ajout√©s √† la configuration CORS');
console.log('2. ‚úÖ Headers CORS configur√©s');
console.log('3. ‚úÖ Logging ajout√© pour debug');
console.log('4. üîÑ D√©ploiement en cours...');

console.log('\n‚è≥ Attendez 2-3 minutes puis testez:');
console.log('   https://sorbo-ingenierie.ci/nos-logiciels.html');
console.log('   https://www.sorbo-ingenierie.ci/nos-logiciels.html');

console.log('\nüîß Pour v√©rifier le d√©ploiement:');
console.log('   node test-domain-ci.js');

console.log('\nüìä Pour surveiller les logs Railway:');
console.log('   railway logs --follow');

console.log('\nüéØ Le probl√®me de votre domaine .ci devrait √™tre r√©solu !');

// Optionnel: lancer un test automatique apr√®s un d√©lai
console.log('\n‚è∞ Test automatique dans 30 secondes...');
setTimeout(() => {
    console.log('\nüîç Lancement du test automatique...');
    try {
        execSync('node test-domain-ci.js', { stdio: 'inherit' });
    } catch (error) {
        console.log('‚ö†Ô∏è Test automatique √©chou√©, testez manuellement');
    }
}, 30000);
