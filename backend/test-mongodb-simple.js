const mongoose = require('mongoose');
require('dotenv').config();

console.log('üß™ Test de connexion MongoDB Atlas');
console.log('==================================');

// Afficher la configuration
console.log('üìã Configuration:');
console.log(`MONGODB_URI: ${process.env.MONGODB_URI ? '‚úÖ Configur√©' : '‚ùå Non configur√©'}`);
console.log(`PORT: ${process.env.PORT || '5000'}`);
console.log(`ADMIN_TOKEN: ${process.env.ADMIN_TOKEN || 'admin123'}`);

// Test de connexion
async function testMongoDB() {
    try {
        console.log('\nüîå Tentative de connexion √† MongoDB Atlas...');
        
        const conn = await mongoose.connect(process.env.MONGODB_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });
        
        console.log('‚úÖ Connexion MongoDB r√©ussie !');
        console.log(`üìç Host: ${conn.connection.host}`);
        console.log(`üóÑÔ∏è Database: ${conn.connection.name}`);
        console.log(`üîó URL: ${conn.connection.client.s.url}`);
        
        // Test de cr√©ation d'un document
        const TestModel = mongoose.model('Test', {
            name: String,
            createdAt: { type: Date, default: Date.now }
        });
        
        const testDoc = new TestModel({ name: 'Test Sorbo Ing√©nierie' });
        await testDoc.save();
        console.log('‚úÖ Test d\'√©criture r√©ussi !');
        
        // Test de lecture
        const docs = await TestModel.find();
        console.log(`‚úÖ Test de lecture r√©ussi ! (${docs.length} document(s))`);
        
        // Nettoyage
        await TestModel.deleteMany({});
        console.log('‚úÖ Test de suppression r√©ussi !');
        
        console.log('\nüéâ TOUS LES TESTS MONGODB SONT PASS√âS !');
        console.log('==========================================');
        
        process.exit(0);
        
    } catch (error) {
        console.error('\n‚ùå ERREUR MONGODB:');
        console.error('==================');
        console.error(`Message: ${error.message}`);
        console.error(`Code: ${error.code}`);
        console.error(`Stack: ${error.stack}`);
        
        console.log('\nüîß D√âPANNAGE:');
        console.log('1. V√©rifiez votre connexion internet');
        console.log('2. V√©rifiez l\'URL MongoDB Atlas dans .env');
        console.log('3. V√©rifiez les permissions de votre cluster');
        console.log('4. V√©rifiez que votre IP est autoris√©e');
        
        process.exit(1);
    }
}

// Lancer le test
testMongoDB();











