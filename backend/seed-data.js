const mongoose = require('mongoose');
const Formation = require('./models/Formation');
require('dotenv').config();

const formationsData = [
  {
    title: 'Formation AutoCAD',
    description: 'Apprenez AutoCAD de A √† Z avec nos experts certifi√©s. Formation compl√®te incluant la mod√©lisation 2D et 3D.',
    price: 150000,
    duration: 5,
    category: 'logiciel',
    type: 'autocad'
  },
  {
    title: 'Formation Covadis',
    description: 'Ma√Ætrisez Covadis pour vos projets de g√©nie civil. Formation sp√©cialis√©e en conception routi√®re et hydraulique.',
    price: 120000,
    duration: 4,
    category: 'logiciel',
    type: 'covadis'
  },
  {
    title: 'Formation Robot Structural Analysis',
    description: 'Analysez vos structures avec Robot. Formation avanc√©e en calcul de structures et dimensionnement.',
    price: 200000,
    duration: 6,
    category: 'logiciel',
    type: 'robot'
  },
  {
    title: 'Formation Revit Architecture',
    description: 'Cr√©ez des mod√®les 3D avec Revit. Formation compl√®te en BIM et mod√©lisation architecturale.',
    price: 180000,
    duration: 5,
    category: 'logiciel',
    type: 'revit'
  },
  {
    title: 'G√©nie Civil - Fondations',
    description: 'Sp√©cialisation en conception de fondations. Formation technique pour ing√©nieurs et techniciens.',
    price: 100000,
    duration: 3,
    category: 'technique',
    type: 'genie-civil'
  },
  {
    title: 'Hydraulique Urbaine',
    description: 'Conception de r√©seaux d\'assainissement et d\'adduction d\'eau. Formation sp√©cialis√©e en hydraulique.',
    price: 130000,
    duration: 4,
    category: 'technique',
    type: 'hydraulique'
  }
];

async function seedData() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    
    console.log('üóÑÔ∏è  Connect√© √† MongoDB Atlas');
    
    // Supprimer les donn√©es existantes
    await Formation.deleteMany({});
    console.log('üóëÔ∏è  Anciennes formations supprim√©es');
    
    // Ins√©rer les nouvelles donn√©es
    const formations = await Formation.insertMany(formationsData);
    console.log(`‚úÖ ${formations.length} formations ajout√©es`);
    
    // Afficher les formations ajout√©es
    formations.forEach(formation => {
      console.log(`   - ${formation.title} (${formation.price} FCFA)`);
    });
    
    console.log('\nüéâ Donn√©es initiales cr√©√©es avec succ√®s !');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation des donn√©es:', error);
    process.exit(1);
  }
}

seedData(); 