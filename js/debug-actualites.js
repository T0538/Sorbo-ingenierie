/**
 * Script de d√©bogage pour les actualit√©s
 */

// Script de debug pour v√©rifier le bon fonctionnement
console.log('üîç DEBUG: Script de debug actualit√©s charg√©');

document.addEventListener('DOMContentLoaded', function() {
  console.log('üîç DEBUG: DOM charg√©');
  
  // V√©rifier si on est sur la page d'accueil
  const homepageContainer = document.getElementById('latest-actualites');
  if (homepageContainer) {
    console.log('üè† DEBUG: Sur la page d\'accueil');
    console.log('üîç DEBUG: Conteneur latest-actualites trouv√©:', homepageContainer);
    console.log('üîç DEBUG: Contenu actuel:', homepageContainer.innerHTML.substring(0, 200) + '...');
  }
  
  // V√©rifier si on est sur la page actualit√©s
  const newsPageContainer = document.getElementById('actualites-container');
  if (newsPageContainer) {
    console.log('üì∞ DEBUG: Sur la page actualit√©s');
    console.log('üîç DEBUG: Conteneur actualites-container trouv√©:', newsPageContainer);
    console.log('üîç DEBUG: Contenu actuel:', newsPageContainer.innerHTML.substring(0, 200) + '...');
  }
  
  // V√©rifier si le gestionnaire d'actualit√©s existe
  if (typeof actualitesManager !== 'undefined') {
    console.log('‚úÖ DEBUG: actualitesManager disponible');
    console.log('üîç DEBUG: Nombre d\'actualit√©s:', actualitesManager.actualites.length);
    
    // Forcer l'affichage apr√®s un petit d√©lai
    setTimeout(() => {
      console.log('üîÑ DEBUG: Tentative d\'affichage forc√©...');
      
      if (homepageContainer) {
        console.log('üè† DEBUG: Affichage forc√© page d\'accueil');
        actualitesManager.displayLatestActualites();
      }
      
      if (newsPageContainer) {
        console.log('üì∞ DEBUG: Affichage forc√© page actualit√©s');
        actualitesManager.displayAllActualites();
        
        // Surveiller les changements de contenu
        const observer = new MutationObserver(function(mutations) {
          mutations.forEach(function(mutation) {
            if (mutation.type === 'childList') {
              console.log('üîç DEBUG: Contenu du conteneur actualit√©s modifi√©:', mutation);
              console.log('üîç DEBUG: Nouveau contenu:', newsPageContainer.innerHTML.substring(0, 100) + '...');
            }
          });
        });
        
        observer.observe(newsPageContainer, { childList: true, subtree: true });
      }
    }, 1000);
    
    // Surveiller toutes les 5 secondes pendant 30 secondes
    let checkInterval = 0;
    const intervalId = setInterval(() => {
      checkInterval++;
      console.log(`üïí DEBUG: V√©rification ${checkInterval}/6`);
      
      if (newsPageContainer) {
        console.log('üì∞ DEBUG: Contenu actuel:', newsPageContainer.children.length, '√©l√©ments');
        if (newsPageContainer.children.length === 0 || newsPageContainer.innerHTML.includes('loading-actualites')) {
          console.log('‚ö†Ô∏è DEBUG: Contenu vide ou loader d√©tect√©');
        }
      }
      
      if (checkInterval >= 6) {
        clearInterval(intervalId);
        console.log('‚úÖ DEBUG: Surveillance termin√©e');
      }
    }, 5000);
    
  } else {
    console.error('‚ùå DEBUG: actualitesManager non disponible');
  }
  
  // V√©rifier les autres scripts
  setTimeout(() => {
    console.log('üîç DEBUG: Scripts charg√©s:');
    console.log('- actualitesManager:', typeof actualitesManager);
    console.log('- DynamicContentLoader:', typeof DynamicContentLoader);
    console.log('- loadActualitesFromAPI:', typeof loadActualitesFromAPI);
  }, 2000);
});
